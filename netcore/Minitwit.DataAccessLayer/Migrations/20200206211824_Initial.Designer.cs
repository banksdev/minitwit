// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minitwit.DataAccessLayer;

namespace Minitwit.DataAccessLayer.Migrations
{
    [DbContext(typeof(CustomDbContext))]
    [Migration("20200206211824_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Minitwit.Models.Follower", b =>
                {
                    b.Property<Guid>("FollowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FollowingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SelfUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FollowerId");

                    b.HasIndex("FollowingUserId");

                    b.HasIndex("SelfUserId");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("Minitwit.Models.Message", b =>
                {
                    b.Property<Guid>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Flagged")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PublishedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Minitwit.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Minitwit.Models.Follower", b =>
                {
                    b.HasOne("Minitwit.Models.User", "Following")
                        .WithMany()
                        .HasForeignKey("FollowingUserId");

                    b.HasOne("Minitwit.Models.User", "Self")
                        .WithMany()
                        .HasForeignKey("SelfUserId");
                });

            modelBuilder.Entity("Minitwit.Models.Message", b =>
                {
                    b.HasOne("Minitwit.Models.User", null)
                        .WithMany("Messages")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
